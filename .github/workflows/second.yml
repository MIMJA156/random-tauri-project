name: build 2

on:
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          [
            { os: macos-latest, arch: aarch64-apple-darwin },
            { os: macos-latest, arch: x86_64-apple-darwin },
            { os: windows-latest, arch: i686-pc-windows-msvc },
          ]

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install silicon arch
        if: matrix.platform.arch == 'aarch64-apple-darwin'
        run: |
          rustup target add aarch64-apple-darwin

      - name: install windows arch
        if: matrix.platform.arch == 'i686-pc-windows-msvc'
        run: |
          rustup target add i686-pc-windows-msvc

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App Name v__VERSION__"
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.platform.arch }}
